import{o as c,_ as S,n as v,p as h,f as b,h as g,S as u,E as n,B as d,j as l,e as O,g as p,m as y,u as m,d as E}from"./index-zKAIDSer.js";const o=4320*60*1e3,T=300*1e3;var r=(t=>(t.discount="discount",t.trial="trial",t))(r||{});const w=c({active:h(),startedAt:v(),type:S(r)}),A=c({banner:w.optional().describe(b.session)}).default({}),I=new g(A);class P extends u{constructor(e,s,a,i,f){super(),this.introOfferStorage=e,this.globalStateService=s,this.messageService=a,this.userService=i,this.abTestsService=f}get introOfferType(){const e=this.abTestsService.getExperimentStatus(n.onboardingExitOffer);return e.active&&e.group===d.test?r.discount:r.trial}get active(){const e=this.abTestsService.getExperimentStatus(n.onboardingExitOffer),s=this.userService.userType==="free",a=this.globalStateService.installedAt+o,i=Date.now()<a;return e.active&&s&&i}get data(){return{active:this.active,endedAt:this.globalStateService.installedAt+o,type:this.introOfferType}}get banner(){const{banner:e}=this.introOfferStorage.state;return e?{...e,active:e.active&&this.active}:{active:!1,startedAt:Date.now(),type:this.introOfferType}}async boot(){await this.introOfferStorage.sync(),this.bootResolve(),await this.bootPromise}async activateBanner(){await this.introOfferStorage.setItems({banner:{startedAt:Date.now()+T,active:!0,type:this.introOfferType}}),this.messageService.notifyTab({type:"intro-offer-banner-state-change",success:!0,data:this.banner})}async deactivateBanner(){await this.introOfferStorage.removeItems("banner"),this.messageService.notifyTab({type:"intro-offer-banner-state-change",success:!0,data:this.banner})}}const x=new l("intro-offer",I,O),_=new P(x,p,y,m,E);export{r as I,_ as i};
